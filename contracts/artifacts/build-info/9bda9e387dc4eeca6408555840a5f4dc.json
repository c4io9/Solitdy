{
	"id": "9bda9e387dc4eeca6408555840a5f4dc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyOperators.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.7;\n\n/// @title Contrato teste caio\n/// @author Caio Pignatari\n/// @dev Cuidado segundo contrato desenvolvido \n// contrato para demonstrar os tipos de variaveis\n\ncontract MyOperators {\n    uint8 a = 1; \n    uint8 b = 2; \n    uint8 c = 3; \n    uint8 result;\n    bool myBool;\n\n    /// @notice Arithmetic Operators (+, -, *, /, %, ++, --)\n    function example_1() public  {\n        a + b; \n        c % b;\n        a++;\n        b--;\n    }\n\n    /// @notice Assignment Operators (=, +=, -=, /=, %=)\n    function example2() public {\n        result = a + b; \n        a = b * c;\n        b = b * c;\n        b *= c;\n    }\n    \n    /// @notice Comparison Operators (==, !=, <, <=, >,>=)\n    function example_3() public view {\n        bool flag = false;\n        if(a < b ){\n            flag = true;\n        }\n       if(a <= b ){\n            flag = true;\n        }\n        if(a == b ){\n            flag = true;\n        }\n        if(a != b ){\n            flag = true;\n        }\n        \n    }\n    /// @notice Logical Operators (!, &&, ||)\n    function example_4() public view {\n        bool flag = false;\n        if(a < b && b > c ){\n            flag = true;\n        }\n        if(a < b && a > 10 ){\n            flag = true;\n        }\n        if((a < b && b > c) || (a < b )){\n            flag = true;\n        }\n\n        if (!myBool) {\n            flag = true;\n        }\n    }\n    /// @notice Conditional Operators (? A:B)\n    function example_5() public view {\n        \n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MyOperators.sol": {
				"MyOperators": {
					"abi": [
						{
							"inputs": [],
							"name": "example2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "example_1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "example_3",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "example_4",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "example_5",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Caio Pignatari",
						"details": "Cuidado segundo contrato desenvolvido ",
						"kind": "dev",
						"methods": {},
						"title": "Contrato teste caio",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyOperators.sol\":214:1513  contract MyOperators {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyOperators.sol\":241:252  uint8 a = 1 */\n  0x00\n  dup1\n  sload\n  not(0xffffff)\n    /* \"contracts/MyOperators.sol\":277:288  uint8 c = 3 */\n  and\n  0x030201\n  or\n  swap1\n  sstore\n    /* \"contracts/MyOperators.sol\":214:1513  contract MyOperators {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyOperators.sol\":214:1513  contract MyOperators {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2c7ad161\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4ab3248b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa54998a7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xce406164\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xeca2a027\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyOperators.sol\":392:485  function example_1() public  {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/MyOperators.sol\":1079:1411  function example_4() public view {... */\n    tag_4:\n      tag_8\n      tag_11\n      jump\t// in\n        /* \"contracts/MyOperators.sol\":548:661  function example2() public {... */\n    tag_5:\n      tag_8\n      tag_13\n      jump\t// in\n        /* \"contracts/MyOperators.sol\":730:1028  function example_3() public view {... */\n    tag_7:\n      tag_8\n      tag_17\n      jump\t// in\n        /* \"contracts/MyOperators.sol\":392:485  function example_1() public  {... */\n    tag_9:\n        /* \"contracts/MyOperators.sol\":435:436  b */\n      sload(0x00)\n        /* \"contracts/MyOperators.sol\":431:436  a + b */\n      tag_19\n      swap1\n        /* \"contracts/MyOperators.sol\":435:436  b */\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/MyOperators.sol\":431:432  a */\n      and\n        /* \"contracts/MyOperators.sol\":431:436  a + b */\n      tag_20\n      jump\t// in\n    tag_19:\n      pop\n        /* \"contracts/MyOperators.sol\":451:452  b */\n      sload(0x00)\n        /* \"contracts/MyOperators.sol\":447:452  c % b */\n      tag_21\n      swap1\n        /* \"contracts/MyOperators.sol\":451:452  b */\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/MyOperators.sol\":447:448  c */\n      0x010000\n      swap1\n      div\n      and\n        /* \"contracts/MyOperators.sol\":447:452  c % b */\n      tag_22\n      jump\t// in\n    tag_21:\n      pop\n        /* \"contracts/MyOperators.sol\":462:463  a */\n      0x00\n        /* \"contracts/MyOperators.sol\":462:465  a++ */\n      dup1\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/MyOperators.sol\":462:463  a */\n      dup1\n        /* \"contracts/MyOperators.sol\":462:465  a++ */\n      tag_23\n      dup4\n      tag_24\n      jump\t// in\n    tag_23:\n      dup3\n      sload\n      0xff\n      swap2\n      dup3\n      and\n      0x0100\n      swap4\n      dup5\n      exp\n      swap1\n      dup2\n      mul\n      swap1\n      dup4\n      mul\n      not\n      swap1\n      swap2\n      and\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"contracts/MyOperators.sol\":475:478  b-- */\n      dup1\n      sload\n      swap2\n      swap1\n      swap2\n      div\n      swap1\n      swap2\n      and\n      swap2\n      pop\n      0x01\n      tag_25\n      dup4\n      tag_26\n      jump\t// in\n    tag_25:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/MyOperators.sol\":392:485  function example_1() public  {... */\n      jump\t// out\n        /* \"contracts/MyOperators.sol\":1079:1411  function example_4() public view {... */\n    tag_11:\n        /* \"contracts/MyOperators.sol\":1122:1131  bool flag */\n      0x00\n        /* \"contracts/MyOperators.sol\":1156:1157  b */\n      dup1\n      sload\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n        /* \"contracts/MyOperators.sol\":1152:1153  a */\n      swap2\n      and\n        /* \"contracts/MyOperators.sol\":1152:1157  a < b */\n      lt\n        /* \"contracts/MyOperators.sol\":1152:1166  a < b && b > c */\n      dup1\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":1165:1166  c */\n      sload(0x00)\n      0xff\n      0x010000\n      dup3\n      div\n      dup2\n      and\n      0x0100\n        /* \"contracts/MyOperators.sol\":1161:1162  b */\n      swap1\n      swap3\n      div\n      and\n        /* \"contracts/MyOperators.sol\":1161:1166  b > c */\n      gt\n        /* \"contracts/MyOperators.sol\":1152:1166  a < b && b > c */\n    tag_28:\n        /* \"contracts/MyOperators.sol\":1149:1204  if(a < b && b > c ){... */\n      iszero\n      tag_29\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":1189:1193  true */\n      0x01\n        /* \"contracts/MyOperators.sol\":1149:1204  if(a < b && b > c ){... */\n    tag_29:\n        /* \"contracts/MyOperators.sol\":1220:1221  b */\n      sload(0x00)\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n        /* \"contracts/MyOperators.sol\":1216:1217  a */\n      swap2\n      and\n        /* \"contracts/MyOperators.sol\":1216:1221  a < b */\n      lt\n        /* \"contracts/MyOperators.sol\":1216:1231  a < b && a > 10 */\n      dup1\n      iszero\n      tag_30\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":1225:1226  a */\n      sload(0x00)\n        /* \"contracts/MyOperators.sol\":1229:1231  10 */\n      0x0a\n        /* \"contracts/MyOperators.sol\":1225:1226  a */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"contracts/MyOperators.sol\":1225:1231  a > 10 */\n      gt\n        /* \"contracts/MyOperators.sol\":1216:1231  a < b && a > 10 */\n    tag_30:\n        /* \"contracts/MyOperators.sol\":1213:1269  if(a < b && a > 10 ){... */\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":1254:1258  true */\n      0x01\n        /* \"contracts/MyOperators.sol\":1213:1269  if(a < b && a > 10 ){... */\n    tag_31:\n        /* \"contracts/MyOperators.sol\":1286:1287  b */\n      sload(0x00)\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n        /* \"contracts/MyOperators.sol\":1282:1283  a */\n      swap2\n      and\n        /* \"contracts/MyOperators.sol\":1282:1287  a < b */\n      lt\n        /* \"contracts/MyOperators.sol\":1282:1296  a < b && b > c */\n      dup1\n      iszero\n      tag_32\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":1295:1296  c */\n      sload(0x00)\n      0xff\n      0x010000\n      dup3\n      div\n      dup2\n      and\n      0x0100\n        /* \"contracts/MyOperators.sol\":1291:1292  b */\n      swap1\n      swap3\n      div\n      and\n        /* \"contracts/MyOperators.sol\":1291:1296  b > c */\n      gt\n        /* \"contracts/MyOperators.sol\":1282:1296  a < b && b > c */\n    tag_32:\n        /* \"contracts/MyOperators.sol\":1281:1309  (a < b && b > c) || (a < b ) */\n      dup1\n      tag_33\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":1306:1307  b */\n      sload(0x00)\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n        /* \"contracts/MyOperators.sol\":1302:1303  a */\n      swap2\n      and\n        /* \"contracts/MyOperators.sol\":1302:1307  a < b */\n      lt\n        /* \"contracts/MyOperators.sol\":1281:1309  (a < b && b > c) || (a < b ) */\n    tag_33:\n        /* \"contracts/MyOperators.sol\":1278:1346  if((a < b && b > c) || (a < b )){... */\n      iszero\n      tag_34\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":1331:1335  true */\n      0x01\n        /* \"contracts/MyOperators.sol\":1278:1346  if((a < b && b > c) || (a < b )){... */\n    tag_34:\n        /* \"contracts/MyOperators.sol\":1361:1367  myBool */\n      sload(0x00)\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyOperators.sol\":1356:1405  if (!myBool) {... */\n      tag_35\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":1390:1394  true */\n      0x01\n        /* \"contracts/MyOperators.sol\":1356:1405  if (!myBool) {... */\n    tag_35:\n        /* \"contracts/MyOperators.sol\":1112:1411  {... */\n      pop\n        /* \"contracts/MyOperators.sol\":1079:1411  function example_4() public view {... */\n      jump\t// out\n        /* \"contracts/MyOperators.sol\":548:661  function example2() public {... */\n    tag_13:\n        /* \"contracts/MyOperators.sol\":598:599  b */\n      sload(0x00)\n        /* \"contracts/MyOperators.sol\":594:599  a + b */\n      tag_37\n      swap1\n        /* \"contracts/MyOperators.sol\":598:599  b */\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/MyOperators.sol\":594:595  a */\n      and\n        /* \"contracts/MyOperators.sol\":594:599  a + b */\n      tag_20\n      jump\t// in\n    tag_37:\n        /* \"contracts/MyOperators.sol\":585:591  result */\n      0x00\n        /* \"contracts/MyOperators.sol\":585:599  result = a + b */\n      dup1\n      sload\n      not(0xff000000)\n      and\n      0x01000000\n      0xff\n      swap4\n      dup5\n      and\n      mul\n      or\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"contracts/MyOperators.sol\":614:619  b * c */\n      tag_38\n      swap2\n        /* \"contracts/MyOperators.sol\":618:619  c */\n      0x010000\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/MyOperators.sol\":585:599  result = a + b */\n      0x0100\n        /* \"contracts/MyOperators.sol\":614:615  b */\n      swap1\n      div\n      and\n        /* \"contracts/MyOperators.sol\":614:619  b * c */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/MyOperators.sol\":610:611  a */\n      0x00\n        /* \"contracts/MyOperators.sol\":610:619  a = b * c */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      swap3\n      dup4\n      and\n      or\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"contracts/MyOperators.sol\":633:638  b * c */\n      tag_40\n      swap2\n        /* \"contracts/MyOperators.sol\":637:638  c */\n      0x010000\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/MyOperators.sol\":610:619  a = b * c */\n      0x0100\n        /* \"contracts/MyOperators.sol\":633:634  b */\n      swap1\n      div\n      and\n        /* \"contracts/MyOperators.sol\":633:638  b * c */\n      tag_39\n      jump\t// in\n    tag_40:\n        /* \"contracts/MyOperators.sol\":629:630  b */\n      0x00\n        /* \"contracts/MyOperators.sol\":629:638  b = b * c */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      0xff\n      swap4\n      dup5\n      and\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      dup1\n      dup4\n      sstore\n        /* \"contracts/MyOperators.sol\":653:654  c */\n      0x010000\n      dup2\n      div\n      dup5\n      and\n      swap4\n      0x01\n      swap3\n        /* \"contracts/MyOperators.sol\":648:654  b *= c */\n      tag_41\n      swap3\n        /* \"contracts/MyOperators.sol\":653:654  c */\n      dup7\n      swap3\n        /* \"contracts/MyOperators.sol\":648:654  b *= c */\n      swap2\n      swap1\n      div\n      and\n      tag_39\n      jump\t// in\n    tag_41:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyOperators.sol\":548:661  function example2() public {... */\n      jump\t// out\n        /* \"contracts/MyOperators.sol\":730:1028  function example_3() public view {... */\n    tag_17:\n        /* \"contracts/MyOperators.sol\":773:782  bool flag */\n      0x00\n        /* \"contracts/MyOperators.sol\":807:808  b */\n      dup1\n      sload\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n        /* \"contracts/MyOperators.sol\":803:804  a */\n      swap2\n      and\n        /* \"contracts/MyOperators.sol\":803:808  a < b */\n      lt\n        /* \"contracts/MyOperators.sol\":800:846  if(a < b ){... */\n      iszero\n      tag_44\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":831:835  true */\n      0x01\n        /* \"contracts/MyOperators.sol\":800:846  if(a < b ){... */\n    tag_44:\n        /* \"contracts/MyOperators.sol\":862:863  b */\n      sload(0x00)\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n        /* \"contracts/MyOperators.sol\":857:858  a */\n      swap2\n      and\n        /* \"contracts/MyOperators.sol\":857:863  a <= b */\n      gt\n        /* \"contracts/MyOperators.sol\":854:901  if(a <= b ){... */\n      tag_45\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":886:890  true */\n      0x01\n        /* \"contracts/MyOperators.sol\":854:901  if(a <= b ){... */\n    tag_45:\n        /* \"contracts/MyOperators.sol\":918:919  b */\n      sload(0x00)\n      0xff\n        /* \"contracts/MyOperators.sol\":913:914  a */\n      dup1\n      dup3\n      and\n        /* \"contracts/MyOperators.sol\":918:919  b */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"contracts/MyOperators.sol\":913:919  a == b */\n      eq\n        /* \"contracts/MyOperators.sol\":910:957  if(a == b ){... */\n      iszero\n      tag_46\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":942:946  true */\n      0x01\n        /* \"contracts/MyOperators.sol\":910:957  if(a == b ){... */\n    tag_46:\n        /* \"contracts/MyOperators.sol\":974:975  b */\n      sload(0x00)\n      0xff\n        /* \"contracts/MyOperators.sol\":969:970  a */\n      dup1\n      dup3\n      and\n        /* \"contracts/MyOperators.sol\":974:975  b */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"contracts/MyOperators.sol\":969:975  a != b */\n      eq\n        /* \"contracts/MyOperators.sol\":966:1013  if(a != b ){... */\n      tag_35\n      jumpi\n      pop\n        /* \"contracts/MyOperators.sol\":730:1028  function example_3() public view {... */\n      jump\t// out\n        /* \"#utility.yul\":14:218   */\n    tag_20:\n        /* \"#utility.yul\":52:55   */\n      0x00\n        /* \"#utility.yul\":88:92   */\n      0xff\n        /* \"#utility.yul\":85:86   */\n      dup3\n        /* \"#utility.yul\":81:93   */\n      and\n        /* \"#utility.yul\":120:124   */\n      0xff\n        /* \"#utility.yul\":117:118   */\n      dup5\n        /* \"#utility.yul\":113:125   */\n      and\n        /* \"#utility.yul\":155:158   */\n      dup1\n        /* \"#utility.yul\":149:153   */\n      0xff\n        /* \"#utility.yul\":145:159   */\n      sub\n        /* \"#utility.yul\":140:143   */\n      dup3\n        /* \"#utility.yul\":137:160   */\n      gt\n        /* \"#utility.yul\":134:183   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":163:181   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":199:212   */\n      add\n      swap4\n        /* \"#utility.yul\":14:218   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":223:461   */\n    tag_39:\n        /* \"#utility.yul\":261:268   */\n      0x00\n        /* \"#utility.yul\":301:305   */\n      0xff\n        /* \"#utility.yul\":298:299   */\n      dup3\n        /* \"#utility.yul\":294:306   */\n      and\n        /* \"#utility.yul\":333:337   */\n      0xff\n        /* \"#utility.yul\":330:331   */\n      dup5\n        /* \"#utility.yul\":326:338   */\n      and\n        /* \"#utility.yul\":393:396   */\n      dup2\n        /* \"#utility.yul\":387:391   */\n      0xff\n        /* \"#utility.yul\":383:397   */\n      div\n        /* \"#utility.yul\":378:381   */\n      dup2\n        /* \"#utility.yul\":375:398   */\n      gt\n        /* \"#utility.yul\":368:371   */\n      dup3\n        /* \"#utility.yul\":361:372   */\n      iszero\n        /* \"#utility.yul\":354:373   */\n      iszero\n        /* \"#utility.yul\":350:399   */\n      and\n        /* \"#utility.yul\":347:422   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":402:420   */\n      tag_55\n      tag_52\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":442:455   */\n      mul\n      swap4\n        /* \"#utility.yul\":223:461   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:644   */\n    tag_26:\n        /* \"#utility.yul\":503:506   */\n      0x00\n        /* \"#utility.yul\":547:551   */\n      0xff\n        /* \"#utility.yul\":540:545   */\n      dup3\n        /* \"#utility.yul\":536:552   */\n      and\n        /* \"#utility.yul\":571:578   */\n      dup1\n        /* \"#utility.yul\":561:602   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":582:600   */\n      tag_58\n      tag_52\n      jump\t// in\n    tag_58:\n      not(0x00)\n        /* \"#utility.yul\":618:638   */\n      add\n      swap3\n        /* \"#utility.yul\":466:644   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:824   */\n    tag_24:\n        /* \"#utility.yul\":686:689   */\n      0x00\n        /* \"#utility.yul\":730:734   */\n      0xff\n        /* \"#utility.yul\":723:728   */\n      dup3\n        /* \"#utility.yul\":719:735   */\n      and\n        /* \"#utility.yul\":759:763   */\n      0xff\n        /* \"#utility.yul\":750:757   */\n      dup2\n        /* \"#utility.yul\":747:764   */\n      eq\n        /* \"#utility.yul\":744:787   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":767:785   */\n      tag_61\n      tag_52\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":816:817   */\n      0x01\n        /* \"#utility.yul\":803:818   */\n      add\n      swap3\n        /* \"#utility.yul\":649:824   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":829:1083   */\n    tag_22:\n        /* \"#utility.yul\":859:860   */\n      0x00\n        /* \"#utility.yul\":893:897   */\n      0xff\n        /* \"#utility.yul\":890:891   */\n      dup4\n        /* \"#utility.yul\":886:898   */\n      and\n        /* \"#utility.yul\":917:920   */\n      dup1\n        /* \"#utility.yul\":907:1041   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":963:973   */\n      0x4e487b71\n        /* \"#utility.yul\":958:961   */\n      0xe0\n        /* \"#utility.yul\":954:974   */\n      shl\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":944:975   */\n      mstore\n        /* \"#utility.yul\":998:1002   */\n      0x12\n        /* \"#utility.yul\":995:996   */\n      0x04\n        /* \"#utility.yul\":988:1003   */\n      mstore\n        /* \"#utility.yul\":1026:1030   */\n      0x24\n        /* \"#utility.yul\":1023:1024   */\n      0x00\n        /* \"#utility.yul\":1016:1031   */\n      revert\n        /* \"#utility.yul\":907:1041   */\n    tag_63:\n        /* \"#utility.yul\":1073:1076   */\n      dup1\n        /* \"#utility.yul\":1066:1070   */\n      0xff\n        /* \"#utility.yul\":1063:1064   */\n      dup5\n        /* \"#utility.yul\":1059:1071   */\n      and\n        /* \"#utility.yul\":1055:1077   */\n      mod\n        /* \"#utility.yul\":1050:1077   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":829:1083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1088:1215   */\n    tag_52:\n        /* \"#utility.yul\":1149:1159   */\n      0x4e487b71\n        /* \"#utility.yul\":1144:1147   */\n      0xe0\n        /* \"#utility.yul\":1140:1160   */\n      shl\n        /* \"#utility.yul\":1137:1138   */\n      0x00\n        /* \"#utility.yul\":1130:1161   */\n      mstore\n        /* \"#utility.yul\":1180:1184   */\n      0x11\n        /* \"#utility.yul\":1177:1178   */\n      0x04\n        /* \"#utility.yul\":1170:1185   */\n      mstore\n        /* \"#utility.yul\":1204:1208   */\n      0x24\n        /* \"#utility.yul\":1201:1202   */\n      0x00\n        /* \"#utility.yul\":1194:1209   */\n      revert\n\n    auxdata: 0xa2646970667358221220a524e82c47f823286882bc35a79a2023c29d956aa7437b2fc570caaab201d5a264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000805462ffffff19166203020117905534801561002157600080fd5b50610403806100316000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632c7ad1611461005c5780634ab3248b14610066578063a54998a71461006e578063ce40616414610064578063eca2a02714610076575b600080fd5b61006461007e565b005b610064610114565b6100646101d9565b61006461029c565b6000546100959060ff6101008204811691166102fc565b506000546100b39060ff610100820481169162010000900416610387565b506000805460ff1690806100c683610367565b825460ff91821661010093840a90810290830219909116179092556000805491909104909116915060016100f98361034a565b91906101000a81548160ff021916908360ff16021790555050565b6000805460ff610100820481169116108015610141575060005460ff620100008204811661010090920416115b1561014a575060015b60005460ff61010082048116911610801561016c5750600054600a60ff909116115b15610175575060015b60005460ff6101008204811691161080156101a1575060005460ff620100008204811661010090920416115b806101b7575060005460ff610100820481169116105b156101c0575060015b600054640100000000900460ff166101d6575060015b50565b6000546101f09060ff6101008204811691166102fc565b6000805463ff0000001916630100000060ff93841602179081905561022391620100008204811691610100900416610321565b6000805460ff191660ff928316179081905561024d91620100008204811691610100900416610321565b6000805461ff00191661010060ff93841681029190911780835562010000810484169360019261028292869291900416610321565b92506101000a81548160ff021916908360ff160217905550565b6000805460ff61010082048116911610156102b5575060015b60005460ff610100820481169116116102cc575060015b60005460ff8082166101009092041614156102e5575060015b60005460ff80821661010090920416146101d65750565b600060ff821660ff84168060ff03821115610319576103196103b7565b019392505050565b600060ff821660ff84168160ff0481118215151615610342576103426103b7565b029392505050565b600060ff82168061035d5761035d6103b7565b6000190192915050565b600060ff821660ff81141561037e5761037e6103b7565b60010192915050565b600060ff8316806103a857634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a524e82c47f823286882bc35a79a2023c29d956aa7437b2fc570caaab201d5a264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH3 0xFFFFFF NOT AND PUSH3 0x30201 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 DUP1 PUSH2 0x31 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2C7AD161 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x4AB3248B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xA54998A7 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xCE406164 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xECA2A027 EQ PUSH2 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x114 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x1D9 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x95 SWAP1 PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND PUSH2 0x2FC JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xB3 SWAP1 PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND SWAP1 DUP1 PUSH2 0xC6 DUP4 PUSH2 0x367 JUMP JUMPDEST DUP3 SLOAD PUSH1 0xFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 DUP5 EXP SWAP1 DUP2 MUL SWAP1 DUP4 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP2 POP PUSH1 0x1 PUSH2 0xF9 DUP4 PUSH2 0x34A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT DUP1 ISZERO PUSH2 0x141 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF PUSH3 0x10000 DUP3 DIV DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND GT JUMPDEST ISZERO PUSH2 0x14A JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT DUP1 ISZERO PUSH2 0x16C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xA PUSH1 0xFF SWAP1 SWAP2 AND GT JUMPDEST ISZERO PUSH2 0x175 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT DUP1 ISZERO PUSH2 0x1A1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF PUSH3 0x10000 DUP3 DIV DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND GT JUMPDEST DUP1 PUSH2 0x1B7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT JUMPDEST ISZERO PUSH2 0x1C0 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1D6 JUMPI POP PUSH1 0x1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1F0 SWAP1 PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 PUSH1 0xFF SWAP4 DUP5 AND MUL OR SWAP1 DUP2 SWAP1 SSTORE PUSH2 0x223 SWAP2 PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH2 0x24D SWAP2 PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 PUSH1 0xFF SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP1 DUP4 SSTORE PUSH3 0x10000 DUP2 DIV DUP5 AND SWAP4 PUSH1 0x1 SWAP3 PUSH2 0x282 SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DIV AND PUSH2 0x321 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT ISZERO PUSH2 0x2B5 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND GT PUSH2 0x2CC JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x2E5 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x1D6 JUMPI POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x319 JUMPI PUSH2 0x319 PUSH2 0x3B7 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP2 PUSH1 0xFF DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x342 JUMPI PUSH2 0x342 PUSH2 0x3B7 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x35D JUMPI PUSH2 0x35D PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND DUP1 PUSH2 0x3A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0xFF DUP5 AND MOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0x24 0xE8 0x2C SELFBALANCE 0xF8 0x23 0x28 PUSH9 0x82BC35A79A2023C29D SWAP6 PUSH11 0xA7437B2FC570CAAAB201D5 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "214:1299:0:-:0;;;241:11;;;-1:-1:-1;;277:11:0;;;;;214:1299;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@example2_61": {
									"entryPoint": 473,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@example_1_34": {
									"entryPoint": 126,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@example_3_106": {
									"entryPoint": 668,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@example_4_168": {
									"entryPoint": 276,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@example_5_173": {
									"entryPoint": null,
									"id": 173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint8": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint8": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint8": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint8": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1217:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "60:158:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "70:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "85:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "88:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "81:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "81:12:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "74:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "102:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "117:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "120:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "113:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:12:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "106:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "161:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "163:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "163:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "163:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "140:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "149:4:1",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "155:3:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "145:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "137:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "137:23:1"
															},
															"nodeType": "YulIf",
															"src": "134:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "192:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "203:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "208:3:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "199:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "199:13:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "192:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "43:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "46:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "52:3:1",
														"type": ""
													}
												],
												"src": "14:204:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "273:188:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "283:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "298:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "301:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:12:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "287:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "315:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "330:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:12:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "319:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "400:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "402:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "402:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "402:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "368:3:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "361:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "361:11:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "354:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "378:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "387:4:1",
																						"type": "",
																						"value": "0xff"
																					},
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "393:3:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "383:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "383:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "375:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "375:23:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:49:1"
															},
															"nodeType": "YulIf",
															"src": "347:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "431:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "446:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "451:3:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "442:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "442:13:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "431:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "252:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "255:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "261:7:1",
														"type": ""
													}
												],
												"src": "223:238:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:133:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "521:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "540:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "547:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:16:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "525:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "580:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "582:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "582:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "582:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "571:7:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:15:1"
															},
															"nodeType": "YulIf",
															"src": "561:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "611:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "622:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "635:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "618:20:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "611:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "503:3:1",
														"type": ""
													}
												],
												"src": "466:178:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:130:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "704:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "723:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "730:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:16:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "708:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "765:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "767:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "767:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "767:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "750:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "747:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:17:1"
															},
															"nodeType": "YulIf",
															"src": "744:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "796:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "807:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "796:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "676:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "686:3:1",
														"type": ""
													}
												],
												"src": "649:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "865:218:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "875:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "890:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "886:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:12:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "879:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "930:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "951:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "958:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "963:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "954:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "954:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "944:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "995:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "998:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "988:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "988:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "988:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1023:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1026:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1016:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1016:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1016:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "917:3:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:11:1"
															},
															"nodeType": "YulIf",
															"src": "907:134:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:27:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1063:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1066:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1059:12:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "1073:3:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1055:22:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1050:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "850:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "853:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "859:1:1",
														"type": ""
													}
												],
												"src": "829:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1120:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1137:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1149:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1140:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1130:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1177:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1180:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1170:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1204:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1088:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_mul_t_uint8(x, y) -> product\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if and(iszero(iszero(x_1)), gt(y_1, div(0xff, x_1))) { panic_error_0x11() }\n        product := mul(x_1, y_1)\n    }\n    function decrement_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if iszero(value_1) { panic_error_0x11() }\n        ret := add(value_1, not(0))\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function mod_t_uint8(x, y) -> r\n    {\n        let y_1 := and(y, 0xff)\n        if iszero(y_1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(and(x, 0xff), y_1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80632c7ad1611461005c5780634ab3248b14610066578063a54998a71461006e578063ce40616414610064578063eca2a02714610076575b600080fd5b61006461007e565b005b610064610114565b6100646101d9565b61006461029c565b6000546100959060ff6101008204811691166102fc565b506000546100b39060ff610100820481169162010000900416610387565b506000805460ff1690806100c683610367565b825460ff91821661010093840a90810290830219909116179092556000805491909104909116915060016100f98361034a565b91906101000a81548160ff021916908360ff16021790555050565b6000805460ff610100820481169116108015610141575060005460ff620100008204811661010090920416115b1561014a575060015b60005460ff61010082048116911610801561016c5750600054600a60ff909116115b15610175575060015b60005460ff6101008204811691161080156101a1575060005460ff620100008204811661010090920416115b806101b7575060005460ff610100820481169116105b156101c0575060015b600054640100000000900460ff166101d6575060015b50565b6000546101f09060ff6101008204811691166102fc565b6000805463ff0000001916630100000060ff93841602179081905561022391620100008204811691610100900416610321565b6000805460ff191660ff928316179081905561024d91620100008204811691610100900416610321565b6000805461ff00191661010060ff93841681029190911780835562010000810484169360019261028292869291900416610321565b92506101000a81548160ff021916908360ff160217905550565b6000805460ff61010082048116911610156102b5575060015b60005460ff610100820481169116116102cc575060015b60005460ff8082166101009092041614156102e5575060015b60005460ff80821661010090920416146101d65750565b600060ff821660ff84168060ff03821115610319576103196103b7565b019392505050565b600060ff821660ff84168160ff0481118215151615610342576103426103b7565b029392505050565b600060ff82168061035d5761035d6103b7565b6000190192915050565b600060ff821660ff81141561037e5761037e6103b7565b60010192915050565b600060ff8316806103a857634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a524e82c47f823286882bc35a79a2023c29d956aa7437b2fc570caaab201d5a264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2C7AD161 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x4AB3248B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xA54998A7 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xCE406164 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xECA2A027 EQ PUSH2 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x114 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x1D9 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x95 SWAP1 PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND PUSH2 0x2FC JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xB3 SWAP1 PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND SWAP1 DUP1 PUSH2 0xC6 DUP4 PUSH2 0x367 JUMP JUMPDEST DUP3 SLOAD PUSH1 0xFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 DUP5 EXP SWAP1 DUP2 MUL SWAP1 DUP4 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP2 POP PUSH1 0x1 PUSH2 0xF9 DUP4 PUSH2 0x34A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT DUP1 ISZERO PUSH2 0x141 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF PUSH3 0x10000 DUP3 DIV DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND GT JUMPDEST ISZERO PUSH2 0x14A JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT DUP1 ISZERO PUSH2 0x16C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xA PUSH1 0xFF SWAP1 SWAP2 AND GT JUMPDEST ISZERO PUSH2 0x175 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT DUP1 ISZERO PUSH2 0x1A1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF PUSH3 0x10000 DUP3 DIV DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND GT JUMPDEST DUP1 PUSH2 0x1B7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT JUMPDEST ISZERO PUSH2 0x1C0 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1D6 JUMPI POP PUSH1 0x1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1F0 SWAP1 PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 PUSH1 0xFF SWAP4 DUP5 AND MUL OR SWAP1 DUP2 SWAP1 SSTORE PUSH2 0x223 SWAP2 PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH2 0x24D SWAP2 PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 PUSH1 0xFF SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP1 DUP4 SSTORE PUSH3 0x10000 DUP2 DIV DUP5 AND SWAP4 PUSH1 0x1 SWAP3 PUSH2 0x282 SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DIV AND PUSH2 0x321 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND LT ISZERO PUSH2 0x2B5 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 AND GT PUSH2 0x2CC JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x2E5 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x1D6 JUMPI POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x319 JUMPI PUSH2 0x319 PUSH2 0x3B7 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP2 PUSH1 0xFF DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x342 JUMPI PUSH2 0x342 PUSH2 0x3B7 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x35D JUMPI PUSH2 0x35D PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND DUP1 PUSH2 0x3A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0xFF DUP5 AND MOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0x24 0xE8 0x2C SELFBALANCE 0xF8 0x23 0x28 PUSH9 0x82BC35A79A2023C29D SWAP6 PUSH11 0xA7437B2FC570CAAAB201D5 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "214:1299:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:93;;;:::i;:::-;;1079:332;;;:::i;548:113::-;;;:::i;730:298::-;;;:::i;392:93::-;435:1;;431:5;;435:1;;;;;;;431;:5;:::i;:::-;-1:-1:-1;451:1:0;;447:5;;451:1;;;;;;;447;;;;:5;:::i;:::-;-1:-1:-1;462:1:0;:3;;;;;:1;:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;475:3:0;;;;;;;;;;-1:-1:-1;;475:3:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;392:93::o;1079:332::-;1122:9;1156:1;;;;;;;;1152;;:5;:14;;;;-1:-1:-1;1165:1:0;;;;;;;;;1161;;;;:5;1152:14;1149:55;;;-1:-1:-1;1189:4:0;1149:55;1220:1;;;;;;;;1216;;:5;:15;;;;-1:-1:-1;1225:1:0;;1229:2;1225:1;;;;:6;1216:15;1213:56;;;-1:-1:-1;1254:4:0;1213:56;1286:1;;;;;;;;1282;;:5;:14;;;;-1:-1:-1;1295:1:0;;;;;;;;;1291;;;;:5;1282:14;1281:28;;;-1:-1:-1;1306:1:0;;;;;;;;1302;;:5;1281:28;1278:68;;;-1:-1:-1;1331:4:0;1278:68;1361:6;;;;;;;1356:49;;-1:-1:-1;1390:4:0;1356:49;1112:299;1079:332::o;548:113::-;598:1;;594:5;;598:1;;;;;;;594;:5;:::i;:::-;585:6;:14;;-1:-1:-1;;585:14:0;;;;;;;;;;;;614:5;;618:1;;;;;;585:14;614:1;;;:5;:::i;:::-;610:1;:9;;-1:-1:-1;;610:9:0;;;;;;;;;;633:5;;637:1;;;;;;610:9;633:1;;;:5;:::i;:::-;629:1;:9;;-1:-1:-1;;629:9:0;;;;;;;;;;;;;;;653:1;;;;;;-1:-1:-1;;648:6:0;;653:1;;648:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;548:113::o;730:298::-;773:9;807:1;;;;;;;;803;;:5;800:46;;;-1:-1:-1;831:4:0;800:46;862:1;;;;;;;;857;;:6;854:47;;-1:-1:-1;886:4:0;854:47;918:1;;;913;;;918;;;;;913:6;910:47;;;-1:-1:-1;942:4:0;910:47;974:1;;;969;;;974;;;;;969:6;966:47;;-1:-1:-1;730:298:0:o;14:204:1:-;52:3;88:4;85:1;81:12;120:4;117:1;113:12;155:3;149:4;145:14;140:3;137:23;134:49;;;163:18;;:::i;:::-;199:13;;14:204;-1:-1:-1;;;14:204:1:o;223:238::-;261:7;301:4;298:1;294:12;333:4;330:1;326:12;393:3;387:4;383:14;378:3;375:23;368:3;361:11;354:19;350:49;347:75;;;402:18;;:::i;:::-;442:13;;223:238;-1:-1:-1;;;223:238:1:o;466:178::-;503:3;547:4;540:5;536:16;571:7;561:41;;582:18;;:::i;:::-;-1:-1:-1;;618:20:1;;466:178;-1:-1:-1;;466:178:1:o;649:175::-;686:3;730:4;723:5;719:16;759:4;750:7;747:17;744:43;;;767:18;;:::i;:::-;816:1;803:15;;649:175;-1:-1:-1;;649:175:1:o;829:254::-;859:1;893:4;890:1;886:12;917:3;907:134;;963:10;958:3;954:20;951:1;944:31;998:4;995:1;988:15;1026:4;1023:1;1016:15;907:134;1073:3;1066:4;1063:1;1059:12;1055:22;1050:27;;;829:254;;;;:::o;1088:127::-;1149:10;1144:3;1140:20;1137:1;1130:31;1180:4;1177:1;1170:15;1204:4;1201:1;1194:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "205400",
								"executionCost": "24475",
								"totalCost": "229875"
							},
							"external": {
								"example2()": "infinite",
								"example_1()": "57584",
								"example_3()": "8826",
								"example_4()": "17374",
								"example_5()": "164"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 1513,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 241,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 252,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 277,
									"end": 288,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 277,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "30201"
								},
								{
									"begin": 277,
									"end": 288,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 277,
									"end": 288,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 288,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1513,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a524e82c47f823286882bc35a79a2023c29d956aa7437b2fc570caaab201d5a264736f6c63430008070033",
									".code": [
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "2C7AD161"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "4AB3248B"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "A54998A7"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "CE406164"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "ECA2A027"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1513,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 392,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 392,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 392,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 392,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 392,
											"end": 485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 392,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 392,
											"end": 485,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1079,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1079,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1079,
											"end": 1411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 661,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 548,
											"end": 661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 548,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 548,
											"end": 661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 730,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 730,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 730,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 730,
											"end": 1028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 392,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 435,
											"end": 436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 451,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 447,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 447,
											"end": 452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 451,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 451,
											"end": 452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 451,
											"end": 452,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 451,
											"end": 452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 451,
											"end": 452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 447,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 447,
											"end": 448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 448,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 447,
											"end": 448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 447,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 447,
											"end": 452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 447,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 462,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 462,
											"end": 465,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 462,
											"end": 465,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 392,
											"end": 485,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1079,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1079,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1166,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1216,
											"end": 1231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1231,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1231,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1216,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1269,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1213,
											"end": 1269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1258,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1269,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1213,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1287,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1307,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1278,
											"end": 1346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1278,
											"end": 1346,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1278,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1356,
											"end": 1405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1356,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1356,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1411,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 548,
											"end": 661,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 548,
											"end": 661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 594,
											"end": 599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 598,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 598,
											"end": 599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 598,
											"end": 599,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 598,
											"end": 599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 598,
											"end": 599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 594,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 599,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 594,
											"end": 599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 585,
											"end": 599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "1000000"
										},
										{
											"begin": 585,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 585,
											"end": 599,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 614,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 618,
											"end": 619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 618,
											"end": 619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 618,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 618,
											"end": 619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 618,
											"end": 619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 614,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 614,
											"end": 615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 614,
											"end": 615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 614,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 610,
											"end": 619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 610,
											"end": 619,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 637,
											"end": 638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 637,
											"end": 638,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 637,
											"end": 638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 637,
											"end": 638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 610,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 633,
											"end": 634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 634,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 633,
											"end": 634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 629,
											"end": 638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 629,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 629,
											"end": 638,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 629,
											"end": 638,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 653,
											"end": 654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 653,
											"end": 654,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 648,
											"end": 654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 653,
											"end": 654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 648,
											"end": 654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 648,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 648,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 648,
											"end": 654,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 648,
											"end": 654,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 648,
											"end": 654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 648,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 661,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 730,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 730,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 773,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 807,
											"end": 808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 803,
											"end": 804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 803,
											"end": 808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 800,
											"end": 846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 800,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 831,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 862,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 862,
											"end": 863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 857,
											"end": 858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 857,
											"end": 863,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 854,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 854,
											"end": 901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 854,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 854,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 913,
											"end": 914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 913,
											"end": 914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 913,
											"end": 914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 918,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 919,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 918,
											"end": 919,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 918,
											"end": 919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 913,
											"end": 919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 910,
											"end": 957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 942,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 974,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 974,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 969,
											"end": 970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 969,
											"end": 970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 974,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 974,
											"end": 975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 974,
											"end": 975,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 974,
											"end": 975,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 974,
											"end": 975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 969,
											"end": 975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 966,
											"end": 1013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 730,
											"end": 1028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 52,
											"end": 55,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 92,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 85,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 81,
											"end": 93,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 117,
											"end": 118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 113,
											"end": 125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 155,
											"end": 158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 145,
											"end": 159,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 140,
											"end": 143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 137,
											"end": 160,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 134,
											"end": 183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 134,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 134,
											"end": 183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 199,
											"end": 212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 199,
											"end": 212,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 218,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 223,
											"end": 461,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 223,
											"end": 461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 261,
											"end": 268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 298,
											"end": 299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 294,
											"end": 306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 333,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 330,
											"end": 331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 326,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 393,
											"end": 396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 391,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 383,
											"end": 397,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 378,
											"end": 381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 375,
											"end": 398,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 368,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 361,
											"end": 372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 354,
											"end": 373,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 350,
											"end": 399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 347,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 347,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 347,
											"end": 422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 442,
											"end": 455,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 442,
											"end": 455,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 223,
											"end": 461,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 223,
											"end": 461,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 644,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 466,
											"end": 644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 551,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 540,
											"end": 545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 571,
											"end": 578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 561,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 561,
											"end": 602,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 582,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 582,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 582,
											"end": 600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 600,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 582,
											"end": 600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 618,
											"end": 638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 466,
											"end": 644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 644,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 649,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 723,
											"end": 728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 719,
											"end": 735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 750,
											"end": 757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 747,
											"end": 764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 744,
											"end": 787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 744,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 744,
											"end": 787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 803,
											"end": 818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 803,
											"end": 818,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 649,
											"end": 824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 649,
											"end": 824,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 1083,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 829,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 859,
											"end": 860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 890,
											"end": 891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 917,
											"end": 920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 907,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 907,
											"end": 1041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 963,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 958,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 954,
											"end": 974,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 995,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1030,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1023,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1031,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 907,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 907,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1063,
											"end": 1064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1077,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 1083,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 829,
											"end": 1083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 1083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 1083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 1083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1088,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1088,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1140,
											"end": 1160,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1184,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1170,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1209,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"example2()": "a54998a7",
							"example_1()": "2c7ad161",
							"example_3()": "eca2a027",
							"example_4()": "4ab3248b",
							"example_5()": "ce406164"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"example2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"example_1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"example_3\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"example_4\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"example_5\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Caio Pignatari\",\"details\":\"Cuidado segundo contrato desenvolvido \",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contrato teste caio\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"example2()\":{\"notice\":\"Assignment Operators (=, +=, -=, /=, %=)\"},\"example_1()\":{\"notice\":\"Arithmetic Operators (+, -, *, /, %, ++, --)\"},\"example_3()\":{\"notice\":\"Comparison Operators (==, !=, <, <=, >,>=)\"},\"example_4()\":{\"notice\":\"Logical Operators (!, &&, ||)\"},\"example_5()\":{\"notice\":\"Conditional Operators (? A:B)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyOperators.sol\":\"MyOperators\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyOperators.sol\":{\"keccak256\":\"0x59d4f6fa220be00c61a9a6d7df626a017eee7fd80e22ef7697b8e8a095de5185\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8867ebd2688a5647cba0ba2e35783bbaa88016c956b072bb81a383ddc99076a1\",\"dweb:/ipfs/QmYw2nLABY8zS6iFdvnmQdqoUCYbXGF2zcuQFvyh5RvnBs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/MyOperators.sol:MyOperators",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 8,
								"contract": "contracts/MyOperators.sol:MyOperators",
								"label": "b",
								"offset": 1,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 11,
								"contract": "contracts/MyOperators.sol:MyOperators",
								"label": "c",
								"offset": 2,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 13,
								"contract": "contracts/MyOperators.sol:MyOperators",
								"label": "result",
								"offset": 3,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 15,
								"contract": "contracts/MyOperators.sol:MyOperators",
								"label": "myBool",
								"offset": 4,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"example2()": {
								"notice": "Assignment Operators (=, +=, -=, /=, %=)"
							},
							"example_1()": {
								"notice": "Arithmetic Operators (+, -, *, /, %, ++, --)"
							},
							"example_3()": {
								"notice": "Comparison Operators (==, !=, <, <=, >,>=)"
							},
							"example_4()": {
								"notice": "Logical Operators (!, &&, ||)"
							},
							"example_5()": {
								"notice": "Conditional Operators (? A:B)"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MyOperators.sol": {
				"ast": {
					"absolutePath": "contracts/MyOperators.sol",
					"exportedSymbols": {
						"MyOperators": [
							174
						]
					},
					"id": 175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:106:0",
								"text": "@title Contrato teste caio\n @author Caio Pignatari\n @dev Cuidado segundo contrato desenvolvido "
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174
							],
							"name": "MyOperators",
							"nameLocation": "223:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "247:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "241:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "241:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "251:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "265:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "259:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 6,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "259:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "269:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "c",
									"nameLocation": "283:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "277:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 9,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "277:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "287:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "result",
									"nameLocation": "301:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "295:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 12,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "295:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "myBool",
									"nameLocation": "318:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "313:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 14,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "313:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "421:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "435:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "431:5:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 24,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "447:5:0"
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "462:3:0",
													"subExpression": {
														"id": 27,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "462:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "462:3:0"
											},
											{
												"expression": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "475:3:0",
													"subExpression": {
														"id": 30,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "475:3:0"
											}
										]
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "331:56:0",
										"text": "@notice Arithmetic Operators (+, -, *, /, %, ++, --)"
									},
									"functionSelector": "2c7ad161",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example_1",
									"nameLocation": "401:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:0:0"
									},
									"scope": 174,
									"src": "392:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "575:86:0",
										"statements": [
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 38,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "585:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "594:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "598:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "594:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "585:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "585:14:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 44,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "610:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 45,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "614:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 46,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "614:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "610:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "610:9:0"
											},
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "629:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 51,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "633:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 52,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "637:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "633:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "629:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "629:9:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 56,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "648:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"id": 57,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "653:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "648:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "648:6:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "491:52:0",
										"text": "@notice Assignment Operators (=, +=, -=, /=, %=)"
									},
									"functionSelector": "a54998a7",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example2",
									"nameLocation": "557:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:0"
									},
									"scope": 174,
									"src": "548:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "763:265:0",
										"statements": [
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "778:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "773:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 65,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "785:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "773:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 69,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "803:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 70,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "807:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "803:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 77,
												"nodeType": "IfStatement",
												"src": "800:46:0",
												"trueBody": {
													"id": 76,
													"nodeType": "Block",
													"src": "810:36:0",
													"statements": [
														{
															"expression": {
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 72,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "824:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "831:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "824:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 75,
															"nodeType": "ExpressionStatement",
															"src": "824:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 78,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "857:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 79,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "862:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 86,
												"nodeType": "IfStatement",
												"src": "854:47:0",
												"trueBody": {
													"id": 85,
													"nodeType": "Block",
													"src": "865:36:0",
													"statements": [
														{
															"expression": {
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 81,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "879:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "886:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "879:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 84,
															"nodeType": "ExpressionStatement",
															"src": "879:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 87,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "913:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 88,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "918:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "913:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 95,
												"nodeType": "IfStatement",
												"src": "910:47:0",
												"trueBody": {
													"id": 94,
													"nodeType": "Block",
													"src": "921:36:0",
													"statements": [
														{
															"expression": {
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 90,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "935:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "942:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "935:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 93,
															"nodeType": "ExpressionStatement",
															"src": "935:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 96,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "969:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 97,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "974:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "969:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 104,
												"nodeType": "IfStatement",
												"src": "966:47:0",
												"trueBody": {
													"id": 103,
													"nodeType": "Block",
													"src": "977:36:0",
													"statements": [
														{
															"expression": {
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 99,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "991:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "998:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "991:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 102,
															"nodeType": "ExpressionStatement",
															"src": "991:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "671:54:0",
										"text": "@notice Comparison Operators (==, !=, <, <=, >,>=)"
									},
									"functionSelector": "eca2a027",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example_3",
									"nameLocation": "739:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "748:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:0"
									},
									"scope": 174,
									"src": "730:298:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "1112:299:0",
										"statements": [
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "1127:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 167,
														"src": "1122:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 110,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1122:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1122:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 114,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1152:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 115,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1152:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 117,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1161:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 118,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1165:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1161:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1152:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"nodeType": "IfStatement",
												"src": "1149:55:0",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "1168:36:0",
													"statements": [
														{
															"expression": {
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 121,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1182:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1189:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1182:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "1182:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 127,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1216:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 128,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1220:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1216:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 130,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1225:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "3130",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "1225:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1216:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "IfStatement",
												"src": "1213:56:0",
												"trueBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "1233:36:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 134,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1247:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1254:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1247:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "1247:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 140,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "1282:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 141,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "1286:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1282:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 143,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "1291:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 144,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1295:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1291:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1282:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 147,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1281:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 148,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 149,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1306:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1302:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 151,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1301:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1281:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "1278:68:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "1310:36:0",
													"statements": [
														{
															"expression": {
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 153,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1324:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1331:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1324:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 156,
															"nodeType": "ExpressionStatement",
															"src": "1324:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1360:7:0",
													"subExpression": {
														"id": 159,
														"name": "myBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1361:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "1356:49:0",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "1369:36:0",
													"statements": [
														{
															"expression": {
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 161,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1383:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1390:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1383:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 164,
															"nodeType": "ExpressionStatement",
															"src": "1383:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1033:41:0",
										"text": "@notice Logical Operators (!, &&, ||)"
									},
									"functionSelector": "4ab3248b",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example_4",
									"nameLocation": "1088:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:2:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1112:0:0"
									},
									"scope": 174,
									"src": "1079:332:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "1495:16:0",
										"statements": []
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1416:41:0",
										"text": "@notice Conditional Operators (? A:B)"
									},
									"functionSelector": "ce406164",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example_5",
									"nameLocation": "1471:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1480:2:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:0:0"
									},
									"scope": 174,
									"src": "1462:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 175,
							"src": "214:1299:0",
							"usedErrors": []
						}
					],
					"src": "33:1480:0"
				},
				"id": 0
			}
		}
	}
}